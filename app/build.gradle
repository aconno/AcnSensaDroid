apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: "../version.gradle"

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.aconno.sensorics"
        manifestPlaceholders = [fabricAPIKey: sensorics_fabricKey]
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        flavorDimensions "version"
    }

    buildTypes {

        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName =
                            "sensorics-${defaultConfig.versionName}-${variant.buildType.name}.apk"
                }
            }
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'thirdpartynotice.txt'
    }
}
dependencies {
    implementation project(':domain')
    implementation project(':device')
    implementation project(':data')
    implementation project(':bluetooth')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"

    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.constraintlayout:constraintlayout-solver:$constraintlayout_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"

    implementation "androidx.room:room-runtime:$androidx_room_version"
    implementation "androidx.room:room-rxjava2:$androidx_room_version"
    kapt "androidx.room:room-compiler:$androidx_room_version"

    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.preference:preference:$preference_version"
    implementation "androidx.work:work-runtime-ktx:$work_runtime_ktx_version"

    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "com.google.android.material:material:$material_version"
    implementation "com.google.android:flexbox:$flexbox_version"
    implementation "com.google.code.gson:gson:$gson_version"

    implementation "no.nordicsemi.android:dfu:$nordic_dfu_version"

    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp_version"

    implementation "com.github.PhilJay:MPAndroidChart:$mpandroidchart_version"

    implementation "com.jpardogo.materialtabstrip:library:$materialtabstrip_version"

    implementation "com.github.lzyzsd:circleprogress:$circleprogress_version"

    implementation("org.eclipse.paho:org.eclipse.paho.android.service:$eclipse_paho_android_service_version") {
        exclude module: 'support-v4'
    }
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$eclipse_paho_mqttv3_version"

    implementation("com.crashlytics.sdk.android:crashlytics:2.10.1@aar") {
        transitive = true
    }

    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    compileOnly "com.squareup" +
            ".inject:assisted-inject-annotations-dagger2:$assisted_inject_dagger_version"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assisted_inject_dagger_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    testImplementation "junit:junit:$junit_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    androidTestImplementation "androidx.test:runner:$test_runner_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    androidTestImplementation "org.mockito:mockito-inline:$mockito_inline_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline_version"
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabric.io/public' }
}
