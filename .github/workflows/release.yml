name: Sensorics Release CI

on:
  push:
    tags:
      - v*

jobs:
  test:
    if: "false"
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Gradle
      run: ./gradlew -Psensorics_fabricKey="${{ secrets.SENSORICS_FABRIC_KEY }}" -PACONNO_RELEASE_KEYSTORE_PATH="keystore" -PACONNO_RELEASE_KEYSTORE_PASSWORD="${{ secrets.ACONNO_RELEASE_KEYSTORE_PASSWORD }}" -PSENSORICS_RELEASE_KEY_ALIAS="${{ secrets.SENSORICS_RELEASE_KEY_ALIAS }}" -PSENSORICS_RELEASE_KEY_PASSWORD="${{ secrets.SENSORICS_RELEASE_KEY_PASSWORD }}" test

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Generate Changelog for Version
      run: |
        STATE=0
        GITHUB_REF=${{ github.ref }}
        TAG_NAME=${GITHUB_REF:10}
        echo ::set-env name=TAG_NAME::$TAG_NAME
        VERSION_NUMBER=${TAG_NAME:1}
        while read line; do
          if [[ $STATE -eq 0 && "$line" =~ ^##.\[$VERSION_NUMBER\] ]]; then
            STATE=1
          elif [[ $STATE -eq 1 ]]; then
            if [[ $line =~ ^## || $line =~ ^\[ ]]; then
              STATE=2
            else echo $line >> CHANGELOG_FOR_NEW_VERSION.md;
            fi
          fi
        done < CHANGELOG.md

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        body_path: "CHANGELOG_FOR_NEW_VERSION.md"
        draft: false
        prerelease: false

    - name: Assemble Asset
      run: |
        echo "${{ secrets.ACONNO_RELEASE_KEYSTORE }}" > keystore.asc
        gpg -d --passphrase "${{ secrets.ACONNO_RELEASE_KEYSTORE_PASSPHRASE }}" --batch keystore.asc > app/keystore
        ./gradlew -PRELEASE_FLAG=true -Psensorics_fabricKey="${{ secrets.SENSORICS_FABRIC_KEY }}" -PACONNO_RELEASE_KEYSTORE_PATH="keystore" -PACONNO_RELEASE_KEYSTORE_PASSWORD="${{ secrets.ACONNO_RELEASE_KEYSTORE_PASSWORD }}" -PSENSORICS_RELEASE_KEY_ALIAS=${{ secrets.SENSORICS_RELEASE_KEY_ALIAS }} -PSENSORICS_RELEASE_KEY_PASSWORD="${{ secrets.SENSORICS_RELEASE_KEY_PASSWORD }}" assembleRelease
        echo ::set-env name=ASSET_NAME::$(ls ./app/build/outputs/apk/release/ | grep '.apk')

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./app/build/outputs/apk/release/${{ env.ASSET_NAME }}"
        asset_name: ${{ env.ASSET_NAME }}
        asset_content_type: application/vnd.android.package-archive

